version: 2.1

jobs:
  build:
    docker:
      - image: cimg/python:3.10.0
    steps:
      - checkout
      - run :
          name: Install flask
          command: 
            pip install flask
      - run : 
          name: compile python app
          command: 
            python -m py_compile app.py
  deploy:
    docker:
      - image: cimg/base:2021.10
    steps:
      - checkout
      - run :
          name: Install python dependencies
          command: |
            #! /bin/bash
            sudo apt update -y
            sudo apt install python3 -y
            sudo apt install python3-flask -y
            flask --version
      - run :
          name: Connect to ec2 instance
          command: |
            #! /bin/bash
            echo Start deploy 
            ssh -o StrictHostKeyChecking=no ubuntu@3.137.154.9 git clone https://github.com/subin-krishna-test/flaskapptest.git     cd flaskapp    sudo nohup python app.py > log.txt 2>&1 &&
            
            
    # docker:
    #   - image: cimg/python:3.10.0
    # steps:
    #   - checkout
    #   - run:
    #       name: AWS EC2 deploy
    #       command: |
    #         ssh -o StrictHostKeyChecking=no ubuntu@3.137.171.250 -v -yes
            
            
            #ssh ubuntu@3.137.171.250 -v -yes
            # echo Start

            #ssh -o StrictHostKeyChecking=no ubuntu@3.137.171.250 
            #echo Start
            # scp -o StrictHostKeyChecking=no app.py 
            # "echo Start deploy && \
            # scp app.py ubuntu@3.137.171.250 && \
            # sudo nohup python app.py > log.txt 2>&1 &&
            # echo Deploy end"
            

            #scp app.py ubuntu@3.137.171.250:
            # scp -o StrictHostKeyChecking=no app.py ubuntu@3.137.171.250
            # ssh -o StrictHostKeyChecking=no ubuntu@3.141.7.109 "sudo nohup python app.py > log.txt 2>&1 &"
            #ssh  Test_1_key ubuntu@ip -v -yes


workflows:
  build-work:
    jobs:
      - build
      - deploy:
          # filters:
          #   branches:
          #     only: main
          requires:
            - build

